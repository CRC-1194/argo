image: "registry.gitlab.com/leia-methods/argo/openfoam-v2112_ubuntu-focal:2021-10-27-SMCIA-R1"

.prepare_openfoam_and_binaries:
  before_script:
    ##
    ## Configure the OpenFOAM environment
    ## 
    - source /opt/OpenFOAM/OpenFOAM-v2012/etc/bashrc || true

    ##
    ## Re-use user-defined OF applications from the FOAM_USER_APPBIN artifact
    ##
    - if [ ! -d "$FOAM_USER_APPBIN" ]; then mkdir -p "$FOAM_USER_APPBIN"; fi
    - cp FOAM_USER_APPBIN/* $FOAM_USER_APPBIN

    ##
    ## Re-use user-defined OF libraries from the FOAM_USER_LIBBIN artifact
    ##
    - if [ ! -d "$FOAM_USER_LIBBIN" ]; then mkdir -p "$FOAM_USER_LIBBIN"; fi
    - cp FOAM_USER_LIBBIN/* $FOAM_USER_LIBBIN


workflow:
  rules:
    ##
    ## The CI pipeline can only be started manually  
    ##
    - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  - building
  - smoke_tests
  - reproduction
  - visualization    


build_debug:
  stage: building
  script:

    ##
    ## Configure the OpenFOAM environment
    ##
    - source /opt/OpenFOAM/OpenFOAM-v2012/etc/bashrc || true

    ##
    ## Build and install
    ##
    - ./install.sh Debug


build_release:
  stage: building
  needs: []
  script:

    ##
    ## Configure the OpenFOAM environment
    ##
    - source /opt/OpenFOAM/OpenFOAM-v2012/etc/bashrc || true

    ##
    ## Build and install
    ##
    - ./install.sh

    ##
    ## OpenFOAM stores app and library binaries outside of project folder!
    ## To re-use project apps and libraries, use FOAM_USER_* env variables.
    ## Store the app and library binary files in a local folder and forward
    ## this folder to the next job using GitLab CI artifacts. 
    ##
   
    ## 
    ## Uncomment if the project builds user-defined OF libraries. 
    ##
    - mkdir FOAM_USER_LIBBIN && cp $FOAM_USER_LIBBIN/* FOAM_USER_LIBBIN
    - mkdir FOAM_USER_APPBIN && cp $FOAM_USER_APPBIN/* FOAM_USER_APPBIN

  artifacts:
    paths:

        ##
        ## Uncomment if user-defind OF libraries are built.
        ##
        - FOAM_USER_LIBBIN/*
       
        ##
        ## Export user-defined OF applications
        ##
        - FOAM_USER_APPBIN/*


triSurface_initialization:
  stage: smoke_tests
  dependencies:
    - build_release
  extends: .prepare_openfoam_and_binaries
  script:
    - cd cases/initialization
    - ./run_triSurface_smoke_tests.sh
    - git clone https://gitlab.com/dglaeser/simtest.git
    - cd simtest && python -m pip install . && cd ..
    - rm -rf simtest
    - |
      python -m simtest \
             --results-directory triSurface-smoke-test-results \
             --reference-directory triSurface-smoke-test-references \
             --config "{\"ignore-fields\": [\"CPU_TIME_MICROSECONDS\", \"VOLUME_FROM_SURFACE_INTEGRAL\", \"VOLUME_ERROR_FROM_SURFACE_INTEGRAL\"], \"defaults\": {\"fuzzy-tolerance\": 1e-8}}"
  artifacts:
    paths:
      - cases/initialization/triSurface-smoke-test-results/*


cpc_2021_data:
  stage: reproduction
  dependencies:
    - build_release
  only:
    variables:
      - $REPRODUCE_CPC2021 != null
  extends: .prepare_openfoam_and_binaries
  script: 
    - cd cases/initialization
    - ./reproduce_CPC2021_results.sh
  artifacts:
    paths:
        - cases/initialization/CPC2021-results/*


cpc_2021_visualize:
  stage: visualization 
  dependencies:
    - cpc_2021_data 
  only:
    variables:
      - $REPRODUCE_CPC2021 != null
  script: 
    - cd cases/initialization
    - ./visualize_CPC2021_results.sh
  artifacts:
    paths:
        - cases/initialization/CPC2021-results/*

          #density_ratio_param_study:
          #  stage: running
          #  dependencies:
          #    - build_release
          #  extends: .prepare_openfoam_and_binaries
          #  script: 
          #   
          #    # Run the parameter variation tests 
          #    - source cases/scripts/bashrc
          #    - cd cases/hydrodynamic/translatingDroplet3D
          #    - argo-create-parameter-study.py densityRatioInfluence.parameter -v "0,2,4,6"
          #    - argo-initilize-parameter-study.py densityRatioInfluence_0000 -m blockMesh -f initFields.sh
          #    - argo-run-study.py interIsoRhoFoam -d densityRatioInfluence_0000 -nc 4
          #    - jupyter-nbconvert --execute --to=html test-nb.ipynb
          #
          #  artifacts:
          #    paths:
          #        - cases/hydrodynamic/translatingDroplet3D/test-nb.html
