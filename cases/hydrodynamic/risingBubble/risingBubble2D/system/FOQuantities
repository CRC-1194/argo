/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  com                                   |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      functionObject1;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

functions
{
    EvaluationQuantities
    {
        libs            ("libutilityFunctionObjects.so");
        type            coded;
        name            EvaluationQuantities;
        writeControl    timeStep;
        writeInterval   1;

        codeWrite
        #{

            const volScalarField& alpha = mesh().lookupObject<volScalarField>("alpha.water");
            const auto& V = mesh().V();
            const auto& C = mesh().C();
            const auto& U = mesh().lookupObject<volVectorField>("U");
            auto risingCenter = gSum((1.0 - alpha) * V * C)/gSum((1.0 - alpha) * V);
            auto risingVelocity = gSum((1.0 - alpha) * V * U)/gSum((1.0 - alpha) * V);

            if (Pstream::master())
            {               
                fileName outputFile = "./output.dat";
                autoPtr<OFstream> outputFilePtr;

                if (!exists(outputFile))
                {
                    OFstream is(outputFile);
                    outputFilePtr.reset(new OFstream(outputFile));
                    outputFilePtr() << "time" << "," << "CenterOfMass" << "," << "RisingVelocity" << endl;
                    outputFilePtr() << mesh().time().timeName() << "," << risingCenter.component(1) << "," << risingVelocity.component(1) << endl;
                }
            
                 outputFilePtr.reset(new OFstream(outputFile,IOstreamOption(),true));
                 outputFilePtr() << mesh().time().timeName() << "," << risingCenter.component(1) << "," << risingVelocity.component(1) << endl;   
             }
       #};
    }
}
